{"version":3,"file":"static/js/961.a9e8209f.chunk.js","mappings":"4OA4FA,UAtFsB,WACpB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAKA,IAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBN,GAASO,KAAKH,EAClC,GAAE,CAACJ,KACCG,EACH,OAAO,KAGT,IAAQK,EACNL,EADMK,YAAaC,EACnBN,EADmBM,aAAcC,EACjCP,EADiCO,WAAYC,EAC7CR,EAD6CQ,SAAUC,EACvDT,EADuDS,OAAQC,EAC/DV,EAD+DU,MAGjE,OACE,UAAC,IAAD,CAAKC,GAAG,OAAR,WACE,UAAC,IAAD,CACEA,GAAG,UACHC,GAAI,GACJC,GAAI,GACJC,QAAQ,OACRC,QAAS,GACTC,aAAa,mBANf,WAQE,gBACEC,IAAG,yCAAoCZ,GACvCa,MAAO,IACPC,IAAI,MAEN,UAAC,IAAD,CACER,GAAG,MACHG,QAAQ,OACRM,cAAc,SACdL,QAAS,GACTG,MAAO,IALT,WAOE,wBAAKR,KACL,UAAC,IAAD,CAAKC,GAAG,MAAMG,QAAQ,OAAOM,cAAc,SAASL,QAAS,GAA7D,WACE,yBAAG,iBAAe,IAAIM,KAAKf,GAAcgB,yBACzC,yBAAG,eAAaC,OAAOhB,GAAYiB,QAAQ,GAAG,WAGhD,UAAC,IAAD,CAAKb,GAAG,MAAMG,QAAQ,OAAOM,cAAc,SAASL,QAAS,GAA7D,WACE,wBAAI,eACJ,uBAAIP,QAEN,UAAC,IAAD,CAAKG,GAAG,MAAMG,QAAQ,OAAOM,cAAc,SAASL,QAAS,GAA7D,WACE,wBAAI,aACJ,uBAAIN,EAAOgB,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,iBAI9C,UAAC,IAAD,CACEhB,GAAG,UACHC,GAAI,GACJC,GAAI,GACJG,aAAa,mBACbF,QAAQ,OACRc,WAAW,SACXb,QAAS,GAPX,WASE,wBAAI,6BACJ,SAACc,EAAD,CAASC,GAAG,OAAZ,SAAmB,UACnB,SAACD,EAAD,CAASC,GAAG,UAAZ,SAAsB,gBAExB,SAAC,EAAAC,SAAD,CACEC,UACE,0BACE,SAAC,KAAD,CACEC,OAAO,KACPf,MAAM,KACNgB,MAAM,SACNC,UAAU,mBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,MAVjB,UAeE,SAAC,KAAD,QAIP,EAGD,IAAMT,GAAUU,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wL","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { NavLink, Outlet, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Box } from 'components/Box';\nimport { fetchMoviesDetails } from 'Services/Api';\nimport { Triangle } from 'react-loader-spinner';\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    fetchMoviesDetails(movieId).then(setMovie);\n  }, [movieId]);\n  if (!movie) {\n    return null;\n  }\n\n  const { poster_path, release_date, popularity, overview, genres, title } =\n    movie;\n\n  return (\n    <Box as=\"main\">\n      <Box\n        as=\"section\"\n        pt={15}\n        pb={15}\n        display=\"flex\"\n        gridGap={70}\n        borderBottom=\"2px solid orange\"\n      >\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          width={250}\n          alt=\"\"\n        />\n        <Box\n          as=\"div\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          gridGap={20}\n          width={900}\n        >\n          <h1>{title}</h1>\n          <Box as=\"div\" display=\"flex\" flexDirection=\"column\" gridGap={10}>\n            <p>Release date: {new Date(release_date).toLocaleDateString()}</p>\n            <p>User score: {Number(popularity).toFixed(0)}%</p>\n          </Box>\n\n          <Box as=\"div\" display=\"flex\" flexDirection=\"column\" gridGap={10}>\n            <h2>Overview:</h2>\n            <p>{overview}</p>\n          </Box>\n          <Box as=\"div\" display=\"flex\" flexDirection=\"column\" gridGap={10}>\n            <h2>Genres:</h2>\n            <p>{genres.map(({ name }) => name).join(' ')}</p>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        as=\"section\"\n        pt={15}\n        pb={15}\n        borderBottom=\"2px solid orange\"\n        display=\"flex\"\n        alignItems=\"center\"\n        gridGap={10}\n      >\n        <h3>Additional information:</h3>\n        <NavItem to=\"cast\">Cast</NavItem>\n        <NavItem to=\"reviews\">Reviews</NavItem>\n      </Box>\n      <Suspense\n        fallback={\n          <div>\n            <Triangle\n              height=\"80\"\n              width=\"80\"\n              color=\"orange\"\n              ariaLabel=\"triangle-loading\"\n              wrapperStyle={{}}\n              wrapperClassName=\"\"\n              visible={true}\n            />\n          </div>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </Box>\n  );\n};\nexport default MoviesDetails;\n// style\nconst NavItem = styled(NavLink)`\n  color: black;\n  font-size: 24px;\n  text-decoration: underline;\n\n  &.active {\n    color: orange;\n  }\n\n  :hover:not(.active) {\n    color: orange;\n  }\n`;\n"],"names":["movieId","useParams","useState","movie","setMovie","useEffect","fetchMoviesDetails","then","poster_path","release_date","popularity","overview","genres","title","as","pt","pb","display","gridGap","borderBottom","src","width","alt","flexDirection","Date","toLocaleDateString","Number","toFixed","map","name","join","alignItems","NavItem","to","Suspense","fallback","height","color","ariaLabel","wrapperStyle","wrapperClassName","visible","styled","NavLink"],"sourceRoot":""}
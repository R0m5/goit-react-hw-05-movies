{"version":3,"file":"static/js/186.57f3ab3f.chunk.js","mappings":"uMA8BA,UAzBgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBN,GAASO,KAAKH,EAClC,GAAE,CAACJ,IACCG,GAKH,SAAC,IAAD,CAAKK,GAAG,UAAR,UACE,SAAC,IAAD,CAAKA,GAAG,KAAKC,QAAQ,OAAOC,cAAc,SAASC,QAAS,GAAIC,EAAG,EAAnE,SACqB,IAAlBT,EAAOU,OACJ,8CACAV,EAAOW,QAAQC,KAAI,WAAsBC,GAAtB,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACjB,2BACE,0BAAI,WAASD,MACb,uBAAIC,MAFGF,EADQ,QARpB,IAiBV,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Box } from 'components/Box';\nimport { fetchMoviesReviews } from 'Services/Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState([]);\n  useEffect(() => {\n    fetchMoviesReviews(movieId).then(setReview);\n  }, [movieId]);\n  if (!review) {\n    return null;\n  }\n  // const { results, author, content } = review;\n  return (\n    <Box as=\"section\">\n      <Box as=\"ul\" display=\"flex\" flexDirection=\"column\" gridGap={15} p={0}>\n        {review.length === 0\n          ? \"Sorry, we don't have reviews for this movie\"\n          : review.results.map(({ author, content }, index) => (\n              <li key={index}>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </li>\n            ))}\n      </Box>\n    </Box>\n  );\n};\nexport default Reviews;\n"],"names":["movieId","useParams","useState","review","setReview","useEffect","fetchMoviesReviews","then","as","display","flexDirection","gridGap","p","length","results","map","index","author","content"],"sourceRoot":""}
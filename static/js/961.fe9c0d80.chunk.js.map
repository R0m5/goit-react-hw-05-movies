{"version":3,"file":"static/js/961.fe9c0d80.chunk.js","mappings":"8SAGAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,oGACyBF,EAAAA,EAAAA,IAAA,qCAAwCC,IADjE,cACQE,EADR,yBAESA,EAASC,MAFlB,2EAaeC,EAAmB,GAAnBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCC,GAAlC,uFACsBN,EAAAA,EAAAA,IAAA,gBACTM,EADS,oBACUL,EADV,oBADtB,cACQM,EADR,yBAISA,EAAMH,MAJf,2EAOeI,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BF,GAA/B,uFACwBN,EAAAA,EAAAA,IAAA,gBACXM,EADW,4BACgBL,EADhB,oBADxB,cACQQ,EADR,yBAISA,EAAQL,MAJjB,2EAOeM,EAAmB,GAAnBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCJ,GAAlC,uFACwBN,EAAAA,EAAAA,IAAA,gBACXM,EADW,4BACgBL,EADhB,2BADxB,cACQU,EADR,yBAISA,EAAQP,MAJjB,kEAeAM,EAAmBE,UAAY,CAAEN,QAASO,IAAAA,OAAAA,YAC1CL,EAAgBI,UAAY,CAAEN,QAASO,IAAAA,OAAAA,YACvCR,EAAmBO,UAAY,CAAEN,QAASO,IAAAA,OAAAA,W,6NChD7BC,EAAYC,EAAAA,GAAAA,GAAH,4EAKTC,EAAYD,EAAAA,GAAAA,GAAH,wMAUTE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,oJASTI,EAAUJ,EAAAA,GAAAA,OAAH,+TAiBPK,EAAYL,EAAAA,GAAAA,EAAH,iIAOTM,EAAQN,EAAAA,GAAAA,EAAH,mJ,gJCmDlB,UA7FsB,WAAO,IAAD,IAC1B,GAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOf,EAAP,KAAcgB,EAAd,KACQjB,GAAYkB,EAAAA,EAAAA,MAAZlB,QACFmB,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAQnD,GANAC,QAAQC,IAAIL,GACZI,QAAQC,IAAIP,IAEZQ,EAAAA,EAAAA,YAAU,YACR5B,EAAAA,EAAAA,IAAmBC,GAAS4B,KAAKX,EAClC,GAAE,CAACjB,KACCC,EACH,OAAO,KAGT,IAAQ4B,EACN5B,EADM4B,YAAaC,EACnB7B,EADmB6B,aAAcC,EACjC9B,EADiC8B,WAAYC,EAC7C/B,EAD6C+B,SAAUC,EACvDhC,EADuDgC,OAAQC,EAC/DjC,EAD+DiC,MAGjE,OACE,UAAC,IAAD,CAAKC,GAAG,OAAR,WACE,SAAC,KAAD,CAAWC,GAAIf,EAAYgB,QAA3B,UACE,SAAC,KAAD,CAASC,KAAK,SAAd,SAAuB,eAEzB,UAAC,IAAD,CACEH,GAAG,UACHI,GAAI,GACJC,GAAI,GACJC,QAAQ,OACRC,QAAS,GACTC,aAAa,mBANf,WAQE,gBACEC,IAAG,yCAAoCf,GACvCgB,MAAO,IACPC,IAAI,MAEN,UAAC,IAAD,CACEX,GAAG,MACHM,QAAQ,OACRM,cAAc,SACdL,QAAS,GACTG,MAAO,IALT,WAOE,wBAAKX,KACL,UAAC,IAAD,CAAKC,GAAG,MAAMM,QAAQ,OAAOM,cAAc,SAASL,QAAS,GAA7D,WACE,yBAAG,iBAAe,IAAIM,KAAKlB,GAAcmB,yBACzC,yBAAG,eAAaC,OAAOnB,GAAYoB,QAAQ,GAAG,WAGhD,UAAC,IAAD,CAAKhB,GAAG,MAAMM,QAAQ,OAAOM,cAAc,SAASL,QAAS,GAA7D,WACE,wBAAI,eACJ,uBAAIV,QAEN,UAAC,IAAD,CAAKG,GAAG,MAAMM,QAAQ,OAAOM,cAAc,SAASL,QAAS,GAA7D,WACE,wBAAI,aACJ,uBAAIT,EAAOmB,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,iBAI9C,UAAC,IAAD,CACEnB,GAAG,UACHI,GAAI,GACJC,GAAI,GACJG,aAAa,mBACbF,QAAQ,OACRc,WAAW,SACXb,QAAS,GAPX,WASE,wBAAI,6BACJ,SAACc,EAAD,CAASpB,GAAG,OAAZ,SAAmB,UACnB,SAACoB,EAAD,CAASpB,GAAG,UAAZ,SAAsB,gBAExB,SAAC,EAAAqB,SAAD,CACEC,UACE,0BACE,SAAC,KAAD,CACEC,OAAO,KACPd,MAAM,KACNe,MAAM,SACNC,UAAU,mBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,MAVjB,UAeE,SAAC,KAAD,QAIP,EAGD,IAAMR,GAAU/C,EAAAA,EAAAA,IAAOwD,EAAAA,GAAPxD,CAAH,wL","sources":["Services/Api.jsx","pages/Home/Home.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'fe65ae3947785f9cceedf502c682301b';\n\nasync function fetchMoviesTrends() {\n  const trending = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return trending.data;\n}\n\n// async function fetchMoviesBySearch(searchQuery) {\n//   const movie = await axios.get(\n//     `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery.query}`\n//   );\n//   console.log(movie);\n//   return movie.data;\n// }\n\nasync function fetchMoviesDetails(movieId) {\n  const movie = await axios.get(\n    `movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return movie.data;\n}\n\nasync function fetchMoviesCast(movieId) {\n  const credits = await axios.get(\n    `movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return credits.data;\n}\n\nasync function fetchMoviesReviews(movieId) {\n  const reviews = await axios.get(\n    `movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return reviews.data;\n}\n\nexport {\n  fetchMoviesTrends,\n  // fetchMoviesBySearch,\n  fetchMoviesDetails,\n  fetchMoviesCast,\n  fetchMoviesReviews,\n};\n\nfetchMoviesReviews.propTypes = { movieId: PropTypes.number.isRequired };\nfetchMoviesCast.propTypes = { movieId: PropTypes.number.isRequired };\nfetchMoviesDetails.propTypes = { movieId: PropTypes.number.isRequired };\n// fetchMoviesBySearch.propTypes = { movieId: PropTypes.string.isRequired };\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const TrendList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\nexport const TrendCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  max-width: 270px;\n  justify-content: space-between;\n  &:hover {\n    transform: scale(1.06);\n  }\n`;\nexport const TitleLink = styled(Link)`\n  font-size: 18px;\n  font-weight: 500;\n  color: black;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-top: 10px;\n`;\n\nexport const BtnBack = styled.button`\n  background-color: orange;\n  color: black;\n  text-align: center;\n  text-transform: uppercase;\n  border-radius: 4px;\n  cursor: pointer;\n  padding: 8px 16px;\n  margin-top: 10px;\n  font-weight: 500;\n  line-height: 1.33;\n  font-size: 14px;\n  &:hover {\n    transform: scale(1.06);\n  }\n`;\n\nexport const TrendDesc = styled.p`\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  color: grey;\n`;\nexport const Title = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  color: black;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-top: 10px;\n`;\n","import { NavLink, Outlet, useParams, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Box } from 'components/Box';\nimport { fetchMoviesDetails } from 'Services/Api';\nimport { Triangle } from 'react-loader-spinner';\nimport { useRef } from 'react';\nimport { TitleLink, BtnBack } from 'pages/Home/Home.styled';\nconst MoviesDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\n\n  console.log(backLinkRef);\n  console.log(location);\n\n  useEffect(() => {\n    fetchMoviesDetails(movieId).then(setMovie);\n  }, [movieId]);\n  if (!movie) {\n    return null;\n  }\n\n  const { poster_path, release_date, popularity, overview, genres, title } =\n    movie;\n\n  return (\n    <Box as=\"main\">\n      <TitleLink to={backLinkRef.current}>\n        <BtnBack type=\"button\">Go back</BtnBack>\n      </TitleLink>\n      <Box\n        as=\"section\"\n        pt={15}\n        pb={15}\n        display=\"flex\"\n        gridGap={70}\n        borderBottom=\"2px solid orange\"\n      >\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          width={250}\n          alt=\"\"\n        />\n        <Box\n          as=\"div\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          gridGap={20}\n          width={900}\n        >\n          <h1>{title}</h1>\n          <Box as=\"div\" display=\"flex\" flexDirection=\"column\" gridGap={10}>\n            <p>Release date: {new Date(release_date).toLocaleDateString()}</p>\n            <p>User score: {Number(popularity).toFixed(0)}%</p>\n          </Box>\n\n          <Box as=\"div\" display=\"flex\" flexDirection=\"column\" gridGap={10}>\n            <h2>Overview:</h2>\n            <p>{overview}</p>\n          </Box>\n          <Box as=\"div\" display=\"flex\" flexDirection=\"column\" gridGap={10}>\n            <h2>Genres:</h2>\n            <p>{genres.map(({ name }) => name).join(' ')}</p>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        as=\"section\"\n        pt={15}\n        pb={15}\n        borderBottom=\"2px solid orange\"\n        display=\"flex\"\n        alignItems=\"center\"\n        gridGap={10}\n      >\n        <h3>Additional information:</h3>\n        <NavItem to=\"cast\">Cast</NavItem>\n        <NavItem to=\"reviews\">Reviews</NavItem>\n      </Box>\n      <Suspense\n        fallback={\n          <div>\n            <Triangle\n              height=\"80\"\n              width=\"80\"\n              color=\"orange\"\n              ariaLabel=\"triangle-loading\"\n              wrapperStyle={{}}\n              wrapperClassName=\"\"\n              visible={true}\n            />\n          </div>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </Box>\n  );\n};\nexport default MoviesDetails;\n// style\nconst NavItem = styled(NavLink)`\n  color: black;\n  font-size: 24px;\n  text-decoration: underline;\n\n  &.active {\n    color: orange;\n  }\n\n  :hover:not(.active) {\n    color: orange;\n  }\n`;\n"],"names":["axios","KEY","fetchMoviesTrends","trending","data","fetchMoviesDetails","movieId","movie","fetchMoviesCast","credits","fetchMoviesReviews","reviews","propTypes","PropTypes","TrendList","styled","TrendCard","TitleLink","Link","BtnBack","TrendDesc","Title","useState","setMovie","useParams","location","useLocation","backLinkRef","useRef","state","from","console","log","useEffect","then","poster_path","release_date","popularity","overview","genres","title","as","to","current","type","pt","pb","display","gridGap","borderBottom","src","width","alt","flexDirection","Date","toLocaleDateString","Number","toFixed","map","name","join","alignItems","NavItem","Suspense","fallback","height","color","ariaLabel","wrapperStyle","wrapperClassName","visible","NavLink"],"sourceRoot":""}
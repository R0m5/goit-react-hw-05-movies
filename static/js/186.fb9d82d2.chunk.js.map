{"version":3,"file":"static/js/186.fb9d82d2.chunk.js","mappings":"8SAGAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,oGACyBF,EAAAA,EAAAA,IAAA,qCAAwCC,IADjE,cACQE,EADR,yBAESA,EAASC,MAFlB,2EAaeC,EAAmB,GAAnBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCC,GAAlC,uFACsBN,EAAAA,EAAAA,IAAA,gBACTM,EADS,oBACUL,EADV,oBADtB,cACQM,EADR,yBAISA,EAAMH,MAJf,2EAOeI,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BF,GAA/B,uFACwBN,EAAAA,EAAAA,IAAA,gBACXM,EADW,4BACgBL,EADhB,oBADxB,cACQQ,EADR,yBAISA,EAAQL,MAJjB,2EAOeM,EAAmB,GAAnBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCJ,GAAlC,uFACwBN,EAAAA,EAAAA,IAAA,gBACXM,EADW,4BACgBL,EADhB,2BADxB,cACQU,EADR,yBAISA,EAAQP,MAJjB,kEAeAM,EAAmBE,UAAY,CAAEN,QAASO,IAAAA,OAAAA,YAC1CL,EAAgBI,UAAY,CAAEN,QAASO,IAAAA,OAAAA,YACvCR,EAAmBO,UAAY,CAAEN,QAASO,IAAAA,OAAAA,W,4FCpB1C,UAzBgB,WACd,IAAQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAmBJ,GAASa,KAAKF,EAClC,GAAE,CAACX,IACCU,GAKH,SAAC,IAAD,CAAKI,GAAG,UAAR,UACE,SAAC,IAAD,CAAKA,GAAG,KAAKC,QAAQ,OAAOC,cAAc,SAASC,QAAS,GAAIC,EAAG,EAAnE,SACqB,IAAlBR,EAAOS,OACJ,8CACAT,EAAOU,QAAQC,KAAI,WAAsBC,GAAtB,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACjB,2BACE,0BAAI,WAASD,MACb,uBAAIC,MAFGF,EADQ,QARpB,IAiBV,C","sources":["Services/Api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'fe65ae3947785f9cceedf502c682301b';\n\nasync function fetchMoviesTrends() {\n  const trending = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return trending.data;\n}\n\n// async function fetchMoviesBySearch(searchQuery) {\n//   const movie = await axios.get(\n//     `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery.query}`\n//   );\n//   console.log(movie);\n//   return movie.data;\n// }\n\nasync function fetchMoviesDetails(movieId) {\n  const movie = await axios.get(\n    `movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return movie.data;\n}\n\nasync function fetchMoviesCast(movieId) {\n  const credits = await axios.get(\n    `movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return credits.data;\n}\n\nasync function fetchMoviesReviews(movieId) {\n  const reviews = await axios.get(\n    `movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return reviews.data;\n}\n\nexport {\n  fetchMoviesTrends,\n  // fetchMoviesBySearch,\n  fetchMoviesDetails,\n  fetchMoviesCast,\n  fetchMoviesReviews,\n};\n\nfetchMoviesReviews.propTypes = { movieId: PropTypes.number.isRequired };\nfetchMoviesCast.propTypes = { movieId: PropTypes.number.isRequired };\nfetchMoviesDetails.propTypes = { movieId: PropTypes.number.isRequired };\n// fetchMoviesBySearch.propTypes = { movieId: PropTypes.string.isRequired };\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Box } from 'components/Box';\nimport { fetchMoviesReviews } from 'Services/Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState([]);\n  useEffect(() => {\n    fetchMoviesReviews(movieId).then(setReview);\n  }, [movieId]);\n  if (!review) {\n    return null;\n  }\n\n  return (\n    <Box as=\"section\">\n      <Box as=\"ul\" display=\"flex\" flexDirection=\"column\" gridGap={15} p={0}>\n        {review.length === 0\n          ? \"Sorry, we don't have reviews for this movie\"\n          : review.results.map(({ author, content }, index) => (\n              <li key={index}>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </li>\n            ))}\n      </Box>\n    </Box>\n  );\n};\nexport default Reviews;\n"],"names":["axios","KEY","fetchMoviesTrends","trending","data","fetchMoviesDetails","movieId","movie","fetchMoviesCast","credits","fetchMoviesReviews","reviews","propTypes","PropTypes","useParams","useState","review","setReview","useEffect","then","as","display","flexDirection","gridGap","p","length","results","map","index","author","content"],"sourceRoot":""}
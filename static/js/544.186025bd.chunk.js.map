{"version":3,"file":"static/js/544.186025bd.chunk.js","mappings":"8SAGAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,oGACyBF,EAAAA,EAAAA,IAAA,qCAAwCC,IADjE,cACQE,EADR,yBAESA,EAASC,MAFlB,2EAaeC,EAAmB,GAAnBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCC,GAAlC,uFACsBN,EAAAA,EAAAA,IAAA,gBACTM,EADS,oBACUL,EADV,oBADtB,cACQM,EADR,yBAISA,EAAMH,MAJf,2EAOeI,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BF,GAA/B,uFACwBN,EAAAA,EAAAA,IAAA,gBACXM,EADW,4BACgBL,EADhB,oBADxB,cACQQ,EADR,yBAISA,EAAQL,MAJjB,2EAOeM,EAAmB,GAAnBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCJ,GAAlC,uFACwBN,EAAAA,EAAAA,IAAA,gBACXM,EADW,4BACgBL,EADhB,2BADxB,cACQU,EADR,yBAISA,EAAQP,MAJjB,kEAeAM,EAAmBE,UAAY,CAAEN,QAASO,IAAAA,OAAAA,YAC1CL,EAAgBI,UAAY,CAAEN,QAASO,IAAAA,OAAAA,YACvCR,EAAmBO,UAAY,CAAEN,QAASO,IAAAA,OAAAA,W,iHCI1C,UAzCa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,MAAoBkB,MAAK,SAAAjB,GACvB,IAAMkB,EAAUlB,EAASmB,QAEzBN,GAAU,SAAAD,GACR,MAAM,GAAN,eAAWA,IAAX,OAAsBM,GACvB,GACF,GACF,GAAE,KAGD,UAAC,IAAD,CAAKE,GAAG,OAAR,WACE,SAAC,IAAD,CAAKA,GAAG,KAAKC,SAAU,GAAIC,WAAY,IAAKC,GAAI,GAAIC,GAAI,GAAxD,SAA4D,oBAI5D,SAAC,KAAD,UACGZ,EAAOa,KAAI,WAA2CC,GAA3C,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,OACV,UAAC,KAAD,YACE,UAAC,KAAD,CAAWC,GAAE,iBAAYH,GAAMI,MAAO,CAAEC,KAAMnB,GAA9C,WACE,gBACEoB,IAAG,yCAAoCL,GACvCM,MAAO,IACPC,IAAI,MAEN,SAAC,KAAD,UAAQT,QAEV,UAAC,KAAD,WAAW,iBACM,IAAIU,KAAKP,GAAcQ,0BAV1BZ,EADN,OAgBd,SAAC,KAAD,MAGL,C,6NCnDYa,EAAYC,EAAAA,GAAAA,GAAH,4EAKTC,EAAYD,EAAAA,GAAAA,GAAH,wMAUTE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,oJASTI,EAAUJ,EAAAA,GAAAA,OAAH,+TAiBPK,EAAYL,EAAAA,GAAAA,EAAH,iIAOTM,EAAQN,EAAAA,GAAAA,EAAH,mJ","sources":["Services/Api.jsx","pages/Home/Home.jsx","pages/Home/Home.styled.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'fe65ae3947785f9cceedf502c682301b';\n\nasync function fetchMoviesTrends() {\n  const trending = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return trending.data;\n}\n\n// async function fetchMoviesBySearch(searchQuery) {\n//   const movie = await axios.get(\n//     `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery.query}`\n//   );\n//   console.log(movie);\n//   return movie.data;\n// }\n\nasync function fetchMoviesDetails(movieId) {\n  const movie = await axios.get(\n    `movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return movie.data;\n}\n\nasync function fetchMoviesCast(movieId) {\n  const credits = await axios.get(\n    `movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return credits.data;\n}\n\nasync function fetchMoviesReviews(movieId) {\n  const reviews = await axios.get(\n    `movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return reviews.data;\n}\n\nexport {\n  fetchMoviesTrends,\n  // fetchMoviesBySearch,\n  fetchMoviesDetails,\n  fetchMoviesCast,\n  fetchMoviesReviews,\n};\n\nfetchMoviesReviews.propTypes = { movieId: PropTypes.number.isRequired };\nfetchMoviesCast.propTypes = { movieId: PropTypes.number.isRequired };\nfetchMoviesDetails.propTypes = { movieId: PropTypes.number.isRequired };\n// fetchMoviesBySearch.propTypes = { movieId: PropTypes.string.isRequired };\n","import { Box } from 'components/Box';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMoviesTrends } from 'Services/Api';\n\nimport {\n  TrendCard,\n  TrendList,\n  TitleLink,\n  TrendDesc,\n  Title,\n} from './Home.styled';\n\nconst Home = () => {\n  const [trends, setTrends] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMoviesTrends().then(trending => {\n      const newData = trending.results;\n\n      setTrends(trends => {\n        return [...trends, ...newData];\n      });\n    });\n  }, []);\n\n  return (\n    <Box as=\"main\">\n      <Box as=\"h1\" fontSize={34} fontWeight={500} mt={15} mb={15}>\n        Trending today\n      </Box>\n\n      <TrendList>\n        {trends.map(({ title, id, poster_path, release_date }, index) => (\n          <TrendCard key={index}>\n            <TitleLink to={`movies/${id}`} state={{ from: location }}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                width={270}\n                alt=\"\"\n              />\n              <Title>{title}</Title>\n            </TitleLink>\n            <TrendDesc>\n              Release date: {new Date(release_date).toLocaleDateString()}\n            </TrendDesc>\n          </TrendCard>\n        ))}\n      </TrendList>\n      <Outlet />\n    </Box>\n  );\n};\nexport default Home;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const TrendList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\nexport const TrendCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  max-width: 270px;\n  justify-content: space-between;\n  &:hover {\n    transform: scale(1.06);\n  }\n`;\nexport const TitleLink = styled(Link)`\n  font-size: 18px;\n  font-weight: 500;\n  color: black;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-top: 10px;\n`;\n\nexport const BtnBack = styled.button`\n  background-color: orange;\n  color: black;\n  text-align: center;\n  text-transform: uppercase;\n  border-radius: 4px;\n  cursor: pointer;\n  padding: 8px 16px;\n  margin-top: 10px;\n  font-weight: 500;\n  line-height: 1.33;\n  font-size: 14px;\n  &:hover {\n    transform: scale(1.06);\n  }\n`;\n\nexport const TrendDesc = styled.p`\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  color: grey;\n`;\nexport const Title = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  color: black;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-top: 10px;\n`;\n"],"names":["axios","KEY","fetchMoviesTrends","trending","data","fetchMoviesDetails","movieId","movie","fetchMoviesCast","credits","fetchMoviesReviews","reviews","propTypes","PropTypes","useState","trends","setTrends","location","useLocation","useEffect","then","newData","results","as","fontSize","fontWeight","mt","mb","map","index","title","id","poster_path","release_date","to","state","from","src","width","alt","Date","toLocaleDateString","TrendList","styled","TrendCard","TitleLink","Link","BtnBack","TrendDesc","Title"],"sourceRoot":""}